#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_PredictionMarket.headers.fc";
#include "tact_PredictionMarket.stdlib.fc";
#include "tact_PredictionMarket.constants.fc";
#include "tact_PredictionMarket.storage.fc";

;;
;; Contract PredictionMarket functions
;;

(slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $PredictionMarket$_contract_init(slice $parent, int $seqno) impure inline_ref {
    var (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool)) = (null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null());
    $self'owner = __tact_create_address(0, 0);
    $self'parent = $parent;
    $self'seqno = $seqno;
    $self'eventDescription = __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7();
    $self'endTime = 0;
    $self'outcomeName1 = __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7();
    $self'outcomeName2 = __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7();
    $self'numOutcomes = 0;
    $self'resolved = false;
    $self'outcome = (- 1);
    $self'totalPool = 0;
    return ($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool);
}

((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), ()) $PredictionMarket$_fun_placeUserBet((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, slice $owner, slice $parent, int $betAmount, int $outcome) impure inline_ref {
    var (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool)) = $self;
    var ($userBetInitState'code, $userBetInitState'data) = $UserBet$_init_child(__tact_context_sys, $owner, $parent);
    slice $userBetAddress = $global_contractAddress(($userBetInitState'code, $userBetInitState'data));
    $global_send($SendParameters$_constructor_to_value_mode_code_data_body($userBetAddress, 25000000, 2, $userBetInitState'code, $userBetInitState'data, $PlaceBetInternal$_store_cell($PlaceBetInternal$_constructor_outcome_betAmount($outcome, $betAmount))));
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), ());
}

((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), (slice, slice, int, slice, slice, int, cell, int, int, int)) $PredictionMarket$_fun_predictionMarketDetails((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self) impure inline_ref {
    var (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool)) = $self;
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), $PredictionMarketDetails$_constructor_owner_eventDescription_endTime_outcomeName1_outcomeName2_numOutcomes_totalOutcomeBets_totalPool_resolved_outcome($self'owner, $self'eventDescription, $self'endTime, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool, $self'resolved, $self'outcome));
}

((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), int) $PredictionMarket$_fun_totalPool((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self) impure inline_ref {
    var (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool)) = $self;
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), $self'totalPool);
}

((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), int) $PredictionMarket$_fun_totalBetForOutcome((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, int $outcome) impure inline_ref {
    var (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool)) = $self;
    throw_unless(38283, ( (($outcome >= 0)) ? (($outcome < $self'numOutcomes)) : (false) ));
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), __tact_not_null(__tact_dict_get_uint_uint($self'totalOutcomeBets, 8, $outcome, 64)));
}

((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), int) $PredictionMarket$_fun_resolvedOutcome((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self) impure inline_ref {
    var (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool)) = $self;
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), $self'outcome);
}

((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), int) $PredictionMarket$_fun_isResolved((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self) impure inline_ref {
    var (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool)) = $self;
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), $self'resolved);
}

;;
;; Receivers of a Contract PredictionMarket
;;

(((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int)), ()) $PredictionMarket$_internal_binary_MarketInitialize((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, (slice, slice, int, slice, slice, int) $msg) impure inline {
    var ($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool) = $self;
    var ($msg'owner, $msg'eventDescription, $msg'endTime, $msg'outcomeName1, $msg'outcomeName2, $msg'numOutcomes) = $msg;
    throw_unless(24122, ( __tact_slice_eq_bits($self'parent, __tact_context_get_sender()) ));
    throw_unless(55984, ($msg'endTime > now()));
    throw_unless(11074, __tact_slice_neq(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), $msg'outcomeName1));
    throw_unless(11074, __tact_slice_neq(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), $msg'outcomeName2));
    throw_unless(16210, ($msg'numOutcomes == 2));
    throw_unless(17847, __tact_slice_neq(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), $msg'eventDescription));
    $self'owner = $msg'owner;
    $self'eventDescription = $msg'eventDescription;
    $self'endTime = $msg'endTime;
    $self'outcomeName1 = $msg'outcomeName1;
    $self'outcomeName2 = $msg'outcomeName2;
    $self'numOutcomes = $msg'numOutcomes;
    $self'totalOutcomeBets~__tact_dict_set_uint_uint(8, 0, 0, 64);
    $self'totalOutcomeBets~__tact_dict_set_uint_uint(8, 1, 0, 64);
    if (($Context$_get_value(__tact_context_get()) > 20000000)) {
        $global_send($SendParameters$_constructor_to_value_mode_body($self'owner, ($Context$_get_value(__tact_context_get()) - 20000000), 2, __gen_cell_comment_b0ff00cda639475b5e711360e99508a2790d5ee34d0598e7d8066850f3ac6c11()));
    }
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), ());
}

(((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int)), ()) $PredictionMarket$_internal_binary_PlaceBet((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, (int) $msg) impure inline {
    var ($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool) = $self;
    var ($msg'outcome) = $msg;
    throw_unless(24032, (now() < $self'endTime));
    throw_unless(38283, ( (($msg'outcome >= 0)) ? (($msg'outcome < $self'numOutcomes)) : (false) ));
    int $currentBet = __tact_not_null(__tact_dict_get_uint_uint($self'totalOutcomeBets, 8, $msg'outcome, 64));
    int $newBetAmount = ($Context$_get_value(__tact_context_get()) - 30000000);
    $self'totalOutcomeBets~__tact_dict_set_uint_uint(8, $msg'outcome, (0 + $newBetAmount), 64);
    $self'totalPool = $self'totalPool + $newBetAmount;
    ($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool)~$PredictionMarket$_fun_placeUserBet(__tact_context_get_sender(), my_address(), $newBetAmount, $msg'outcome);
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), ());
}

(((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int)), ()) $PredictionMarket$_internal_binary_ResolveMarket((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, (int) $msg) impure inline {
    var ($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool) = $self;
    var ($msg'outcome) = $msg;
    throw_unless(24933, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    throw_unless(38368, (now() >= $self'endTime));
    throw_unless(20846, (~ $self'resolved));
    throw_unless(38283, ( (($msg'outcome >= 0)) ? (($msg'outcome < $self'numOutcomes)) : (false) ));
    $self'resolved = true;
    $self'outcome = $msg'outcome;
    ($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool)~$PredictionMarket$_fun_reply(__gen_cell_comment_2c6b6b865e2040850946d4affb813aa640fc59bf74d62a27acb5af4c6537968f());
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), ());
}

(((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int)), ()) $PredictionMarket$_internal_binary_ClaimWinningsInfo((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, (int, slice, int) $msg) impure inline {
    var ($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool) = $self;
    var ($msg'betAmount, $msg'userBet, $msg'outcome) = $msg;
    throw_unless(39401, ( __tact_slice_eq_bits($msg'userBet, __tact_context_get_sender()) ));
    throw_unless(10454, $self'resolved);
    throw_unless(22516, ($self'outcome == $msg'outcome));
    if (($self'outcome == $msg'outcome)) {
        int $userShare = (($msg'betAmount * $self'totalPool) / __tact_not_null(__tact_dict_get_uint_uint($self'totalOutcomeBets, 8, $msg'outcome, 64)));
        $global_send($SendParameters$_constructor_to_value_mode_body($msg'userBet, $userShare, (64 | 2), __gen_cell_comment_228c29575099cca128304cdf5d00b4fd7f72c972ed919e669959f65c46c034c5()));
    }
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), ());
}

((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), ()) $PredictionMarket$_receive_bounce((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, slice $src) impure inline {
    var ($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool) = $self;
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), ());
}

(((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int)), ()) $PredictionMarket$_internal_binary_Deploy((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, (int) $deploy) impure inline {
    var ($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool)~$PredictionMarket$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'owner, $self'parent, $self'seqno, $self'eventDescription, $self'endTime, $self'resolved, $self'outcome, $self'outcomeName1, $self'outcomeName2, $self'numOutcomes, $self'totalOutcomeBets, $self'totalPool), ());
}

;;
;; Get methods of a Contract PredictionMarket
;;

_ %predictionMarketDetails() method_id(123087) {
    var self = $PredictionMarket$_contract_load();
    var res = self~$PredictionMarket$_fun_predictionMarketDetails();
    return $PredictionMarketDetails$_to_external(res);
}

_ %totalPool() method_id(121593) {
    var self = $PredictionMarket$_contract_load();
    var res = self~$PredictionMarket$_fun_totalPool();
    return res;
}

_ %totalBetForOutcome(int $$outcome) method_id(83422) {
    int $outcome = $$outcome;
    var self = $PredictionMarket$_contract_load();
    var res = self~$PredictionMarket$_fun_totalBetForOutcome($outcome);
    return res;
}

_ %resolvedOutcome() method_id(116493) {
    var self = $PredictionMarket$_contract_load();
    var res = self~$PredictionMarket$_fun_resolvedOutcome();
    return res;
}

_ %isResolved() method_id(79125) {
    var self = $PredictionMarket$_contract_load();
    var res = self~$PredictionMarket$_fun_isResolved();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmUS4uDmVUqNAzkV6M9xMBZTLho97TQE5urrhhb34TkuMC";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract PredictionMarket
;;

((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), int) $PredictionMarket$_contract_router_internal((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        
        ;; Skip 0xFFFFFFFF
        in_msg~skip_bits(32);
        
        ;; Fallback bounce receiver
        self~$PredictionMarket$_receive_bounce(in_msg);
        
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive MarketInitialize message
    if (op == 2376986870) {
        var msg = in_msg~$MarketInitialize$_load();
        self~$PredictionMarket$_internal_binary_MarketInitialize(msg);
        return (self, true);
    }
    
    ;; Receive PlaceBet message
    if (op == 3093552415) {
        var msg = in_msg~$PlaceBet$_load();
        self~$PredictionMarket$_internal_binary_PlaceBet(msg);
        return (self, true);
    }
    
    ;; Receive ResolveMarket message
    if (op == 1189540808) {
        var msg = in_msg~$ResolveMarket$_load();
        self~$PredictionMarket$_internal_binary_ResolveMarket(msg);
        return (self, true);
    }
    
    ;; Receive ClaimWinningsInfo message
    if (op == 1086734434) {
        var msg = in_msg~$ClaimWinningsInfo$_load();
        self~$PredictionMarket$_internal_binary_ClaimWinningsInfo(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$PredictionMarket$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $PredictionMarket$_contract_load();
    
    ;; Handle operation
    int handled = self~$PredictionMarket$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $PredictionMarket$_contract_store(self);
}
