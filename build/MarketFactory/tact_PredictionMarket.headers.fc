;;
;; Header files for PredictionMarket
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_uint_uint
(cell, ()) __tact_dict_set_uint_uint(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_get_uint_uint
int __tact_dict_get_uint_uint(cell d, int kl, int k, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_slice_neq
int __tact_slice_neq(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $MarketInitialize$_load
(slice, ((slice, slice, int, slice, slice, int))) $MarketInitialize$_load(slice sc_0) inline_ref;

;; $PlaceBet$_load
(slice, ((int))) $PlaceBet$_load(slice sc_0) inline;

;; $ResolveMarket$_load
(slice, ((int))) $ResolveMarket$_load(slice sc_0) inline;

;; $ClaimWinningsInfo$_load
(slice, ((int, slice, int))) $ClaimWinningsInfo$_load(slice sc_0) inline;

;; $PlaceBetInternal$_store
builder $PlaceBetInternal$_store(builder build_0, (int, int) v) inline;

;; $PlaceBetInternal$_store_cell
cell $PlaceBetInternal$_store_cell((int, int) v) inline;

;; $PredictionMarket$_store
builder $PredictionMarket$_store(builder build_0, (slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) v) inline;

;; $PredictionMarket$_load
(slice, ((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int))) $PredictionMarket$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $PredictionMarketDetails$_to_external
(slice, slice, int, slice, slice, int, cell, int, int, int) $PredictionMarketDetails$_to_external(((slice, slice, int, slice, slice, int, cell, int, int, int)) v) inline;

;; $PredictionMarket$init$_load
(slice, ((slice, int))) $PredictionMarket$init$_load(slice sc_0) inline;

;; $UserBet$init$_store
builder $UserBet$init$_store(builder build_0, (slice, slice) v) inline;

;; $PredictionMarket$_contract_init
(slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $PredictionMarket$_contract_init(slice $parent, int $seqno) impure inline_ref;

;; $PredictionMarket$_contract_load
(slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $PredictionMarket$_contract_load() impure inline_ref;

;; $PredictionMarket$_contract_store
() $PredictionMarket$_contract_store((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_code_data_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_code_data_body(slice to, int value, int mode, cell code, cell data, cell body) inline;

;; $PlaceBetInternal$_constructor_outcome_betAmount
((int, int)) $PlaceBetInternal$_constructor_outcome_betAmount(int outcome, int betAmount) inline;

;; $UserBet$_init_child
(cell, cell) $UserBet$_init_child(cell sys', slice $owner, slice $parent) inline_ref;

;; $PredictionMarket$_fun_placeUserBet
((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), ()) $PredictionMarket$_fun_placeUserBet((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, slice $owner, slice $parent, int $betAmount, int $outcome) impure inline_ref;

;; $PredictionMarketDetails$_constructor_owner_eventDescription_endTime_outcomeName1_outcomeName2_numOutcomes_totalOutcomeBets_totalPool_resolved_outcome
((slice, slice, int, slice, slice, int, cell, int, int, int)) $PredictionMarketDetails$_constructor_owner_eventDescription_endTime_outcomeName1_outcomeName2_numOutcomes_totalOutcomeBets_totalPool_resolved_outcome(slice owner, slice eventDescription, int endTime, slice outcomeName1, slice outcomeName2, int numOutcomes, cell totalOutcomeBets, int totalPool, int resolved, int outcome) inline;

;; $PredictionMarket$_fun_predictionMarketDetails
((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), (slice, slice, int, slice, slice, int, cell, int, int, int)) $PredictionMarket$_fun_predictionMarketDetails((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self) impure inline_ref;

;; $PredictionMarket$_fun_totalPool
((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), int) $PredictionMarket$_fun_totalPool((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self) impure inline_ref;

;; $PredictionMarket$_fun_totalBetForOutcome
((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), int) $PredictionMarket$_fun_totalBetForOutcome((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, int $outcome) impure inline_ref;

;; $PredictionMarket$_fun_resolvedOutcome
((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), int) $PredictionMarket$_fun_resolvedOutcome((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self) impure inline_ref;

;; $PredictionMarket$_fun_isResolved
((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), int) $PredictionMarket$_fun_isResolved((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $PredictionMarket$_fun_forward
((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), ()) $PredictionMarket$_fun_forward((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $PredictionMarket$_fun_reply
((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), ()) $PredictionMarket$_fun_reply((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, cell $body) impure inline;

;; $PredictionMarket$_fun_notify
((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int), ()) $PredictionMarket$_fun_notify((slice, slice, int, slice, int, int, int, slice, slice, int, cell, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
