#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_MarketFactory.headers.fc";
#include "tact_MarketFactory.stdlib.fc";
#include "tact_MarketFactory.constants.fc";
#include "tact_MarketFactory.storage.fc";

;;
;; Contract MarketFactory functions
;;

(slice, int) $MarketFactory$_contract_init() impure inline_ref {
    var (($self'owner, $self'predictionMarketCount)) = (null(), null());
    $self'owner = __tact_context_get_sender();
    $self'predictionMarketCount = 0;
    return ($self'owner, $self'predictionMarketCount);
}

((slice, int), slice) $MarketFactory$_fun_childAddress((slice, int) $self, int $seqno) impure inline_ref {
    var (($self'owner, $self'predictionMarketCount)) = $self;
    var ($initState'code, $initState'data) = $PredictionMarket$_init_child(__tact_context_sys, my_address(), $seqno);
    slice $preMarketContractAddress = $global_contractAddress(($initState'code, $initState'data));
    return (($self'owner, $self'predictionMarketCount), $preMarketContractAddress);
}

((slice, int), int) $MarketFactory$_fun_predictionMarketCount((slice, int) $self) impure inline_ref {
    var (($self'owner, $self'predictionMarketCount)) = $self;
    return (($self'owner, $self'predictionMarketCount), $self'predictionMarketCount);
}

((slice, int), ()) $MarketFactory$_fun_requireOwner((slice, int) $self) impure inline_ref {
    var (($self'owner, $self'predictionMarketCount)) = $self;
    throw_unless(132, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    return (($self'owner, $self'predictionMarketCount), ());
}

((slice, int), slice) $MarketFactory$_fun_owner((slice, int) $self) impure inline_ref {
    var (($self'owner, $self'predictionMarketCount)) = $self;
    return (($self'owner, $self'predictionMarketCount), $self'owner);
}

;;
;; Receivers of a Contract MarketFactory
;;

(((slice, int)), ()) $MarketFactory$_internal_binary_CreateMarket((slice, int) $self, (slice, int, slice, slice, int) $msg) impure inline {
    var ($self'owner, $self'predictionMarketCount) = $self;
    var ($msg'eventDescription, $msg'endTime, $msg'outcomeName1, $msg'outcomeName2, $msg'numOutcomes) = $msg;
    throw_unless(55984, ($msg'endTime > now()));
    throw_unless(11074, __tact_slice_neq(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), $msg'outcomeName1));
    throw_unless(11074, __tact_slice_neq(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), $msg'outcomeName2));
    throw_unless(16210, ($msg'numOutcomes == 2));
    throw_unless(17847, __tact_slice_neq(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), $msg'eventDescription));
    ($self'owner, $self'predictionMarketCount)~$MarketFactory$_fun_requireOwner();
    var ($initState'code, $initState'data) = $PredictionMarket$_init_child(__tact_context_sys, my_address(), $self'predictionMarketCount);
    slice $preMarketContractAddress = $global_contractAddress(($initState'code, $initState'data));
    $self'predictionMarketCount = $self'predictionMarketCount + 1;
    int $messageValue = ($Context$_get_value(__tact_context_get()) - 20000000);
    if ((__tact_my_balance() < 20000000)) {
        $messageValue = ($messageValue - 20000000);
    }
    $global_send($SendParameters$_constructor_to_value_mode_code_data_body($preMarketContractAddress, $messageValue, 2, $initState'code, $initState'data, $MarketInitialize$_store_cell($MarketInitialize$_constructor_owner_eventDescription_endTime_outcomeName1_outcomeName2_numOutcomes(__tact_context_get_sender(), $msg'eventDescription, $msg'endTime, $msg'outcomeName1, $msg'outcomeName2, $msg'numOutcomes))));
    return (($self'owner, $self'predictionMarketCount), ());
}

(((slice, int)), ()) $MarketFactory$_internal_binary_Deploy((slice, int) $self, (int) $deploy) impure inline {
    var ($self'owner, $self'predictionMarketCount) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'owner, $self'predictionMarketCount)~$MarketFactory$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'owner, $self'predictionMarketCount), ());
}

(((slice, int)), ()) $MarketFactory$_internal_binary_ChangeOwner((slice, int) $self, (int, slice) $msg) impure inline {
    var ($self'owner, $self'predictionMarketCount) = $self;
    var ($msg'queryId, $msg'newOwner) = $msg;
    ($self'owner, $self'predictionMarketCount)~$MarketFactory$_fun_requireOwner();
    $self'owner = $msg'newOwner;
    ($self'owner, $self'predictionMarketCount)~$MarketFactory$_fun_reply($ChangeOwnerOk$_store_cell($ChangeOwnerOk$_constructor_queryId_newOwner($msg'queryId, $msg'newOwner)));
    return (($self'owner, $self'predictionMarketCount), ());
}

;;
;; Get methods of a Contract MarketFactory
;;

_ %childAddress(int $$seqno) method_id(80689) {
    int $seqno = $$seqno;
    var self = $MarketFactory$_contract_load();
    var res = self~$MarketFactory$_fun_childAddress($seqno);
    return res;
}

_ %predictionMarketCount() method_id(80373) {
    var self = $MarketFactory$_contract_load();
    var res = self~$MarketFactory$_fun_predictionMarketCount();
    return res;
}

_ %owner() method_id(83229) {
    var self = $MarketFactory$_contract_load();
    var res = self~$MarketFactory$_fun_owner();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.ownable.transferable.v2"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmXRwdJRNABeXEQ4dH62KGBLyHXadt8he1eLDS8o4PBkhf";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract MarketFactory
;;

((slice, int), int) $MarketFactory$_contract_router_internal((slice, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive CreateMarket message
    if (op == 336041117) {
        var msg = in_msg~$CreateMarket$_load();
        self~$MarketFactory$_internal_binary_CreateMarket(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$MarketFactory$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Receive ChangeOwner message
    if (op == 2174598809) {
        var msg = in_msg~$ChangeOwner$_load();
        self~$MarketFactory$_internal_binary_ChangeOwner(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $MarketFactory$_contract_load();
    
    ;; Handle operation
    int handled = self~$MarketFactory$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $MarketFactory$_contract_store(self);
}
